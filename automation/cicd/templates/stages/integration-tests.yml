parameters:
  - name: env
    displayName: Environment

stages:
  - stage:
    displayName: "Integration Testing"
    jobs:
      - job:
        timeoutInMinutes: 10
        displayName: "Integration tests"
        steps:
          - checkout: self

          - bash: |
              # Check Java version
              java -version

              # Check newman version if already installed, otherwise install
              echo "Newman version: $(newman -v)" || sudo npm install i -g newman

              # Check if package is installed, otherwise install
              npm list -g newman-reporter-htmlextra || sudo npm install i -g newman-reporter-htmlextra

            name: installNewman
            workingDirectory: "$(System.DefaultWorkingDirectory)"
            displayName: Install Newman (+htmlextra)

          - bash: |

              # Clean up and previous execution
              rm -f newman-html/* newman-junit/*

              # Run Postman collection and store results in HTML and XML files 
              newman run acme-microservices-it.postman_collection.json -e ${{ parameters.env }}.postman_environment.json --reporters cli,htmlextra,junit  --reporter-htmlextra-logs --reporter-htmlextra-title "Integration Test Result" --reporter-htmlextra-export "newman-html/integration-test-report-$(date '+%Y%m%d-%H%M%S').html" --reporter-junit-export "newman-junit/junitReport.xml"
            name: runIntegrationTest
            workingDirectory: "$(System.DefaultWorkingDirectory)"
            displayName: Run Integration Tests
            continueOnError: true

          - task: UploadPostmanHtmlReport@1
            displayName: "Upload Postman HTML Report"
            inputs:
              cwd: "newman-html"

          # - task: PublishTestResults@2
          #   name: publishIntegrationTestReport
          #   displayName: Publish JUnit report
          #   inputs:
          #     testResultsFiles: 'newman-junit/**'
          #     failTaskOnFailedTests: true
          #     testRunTitle: 'Integration Tests'
